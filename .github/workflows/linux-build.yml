name: Linux

on: [push]

jobs:
  Build-for-Ubuntu:
    name: Build for Ubuntu
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build AmneziaWG tools
      run: |
        apt -y update &&
        apt -y install build-essential &&
        cd src &&
        make &&
        mkdir build &&
        cp wg ./build/awg &&
        cp wg-quick/linux.bash ./build/awg-quick

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-22.04-amneziawg-tools
        path: ./src/build

  Build-for-Alpine-AMD64:
    name: Build for Alpine AMD64
    runs-on: ubuntu-latest
    container:
      image: alpine:3.19
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build AmneziaWG tools
      run: |
        apk add linux-headers build-base &&
        cd src &&
        make &&
        mkdir build &&
        cp wg ./build/awg &&
        cp wg-quick/linux.bash ./build/awg-quick

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: alpine-3.19-x64-amneziawg-tools
        path: ./src/build

  Build-for-Alpine-ARM64:
    name: Build for Alpine ARM64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/arm64
        images: thepeshka/amneziawg-tools

    - name: Build
      uses: docker/build-push-action@v5
      with:
        platforms: linux/arm64
        load: true

    - name: Build AmneziaWG tools
      run: |
        docker run -v $(PWD)/build:/app/build thepeshka/amneziawg-tools

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: alpine-3.19-arm64-amneziawg-tools
        path: ./src/build

  GitHub-Release:
    name: GitHub Release
    needs: [Build-for-Ubuntu, Build-for-Alpine-AMD64, Build-for-Alpine-ARM64]
    strategy:
      matrix:
        include:
          - os: "ubuntu"
            release: "24.04"
          - os: "alpine"
            release: "3.19"
          - os: "alpine"
            release: "3.19-arm"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Calculate checksums
        run: for file in $(find ./${{ matrix.os }}-${{ matrix.release }}-amneziawg-tools/ -type f); do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done
        
      - name: Zip files
        run: zip -r ${{ matrix.os }}-${{ matrix.release }}-amneziawg-tools.zip ${{ matrix.os }}-${{ matrix.release }}-amneziawg-tools

      - name: Upload binaries to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ matrix.os }}-${{ matrix.release }}-amneziawg-tools.zip
          tag: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          overwrite: true
          file_glob: true
